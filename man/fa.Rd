% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fa.R
\name{fa}
\alias{fa}
\title{Generate Font Awesome icons as SVGs}
\usage{
fa(
  name,
  fill = NULL,
  fill_opacity = NULL,
  stroke = NULL,
  stroke_width = NULL,
  stroke_opacity = NULL,
  height = NULL,
  width = NULL,
  margin_left = NULL,
  margin_right = NULL,
  position = NULL,
  title = NULL,
  a11y = c("deco", "sem", "none")
)
}
\arguments{
\item{name}{The name of the Font Awesome icon. This could be as a short name
(e.g., \code{"npm"}, \code{"drum"}, etc.), or, a full name (e.g., \code{"fab fa-npm"},
\code{"fas fa-drum"}, etc.). The names should correspond to current Version 5
Font Awesome names. A list of short and full names can be accessed through
the \code{\link[=fa_metadata]{fa_metadata()}} function with \code{fa_metadata()$icon_names} and
\code{fa_metadata()$icon_names_full}. If supplying a Version 4 icon name, it
will be internally translated to the Version 5 icon name and a Version 5
icon will be returned. A data frame containing the short names that changed
from version 4 (\code{v4_name}) to version 5 (\code{v5_name}) can be obtained by
using \code{fa_metadata()$v4_v5_name_tbl}.}

\item{fill, fill_opacity}{The fill color of the icon can be set with \code{fill}.
If not provided then the default value of \code{"currentColor"} is applied so
that the SVG fill matches the color of the parent HTML element's \code{color}
attribute. The opacity level of the SVG fill can be controlled with a
decimal value between \code{0} and \code{1}.}

\item{stroke, stroke_width, stroke_opacity}{The stroke options allow for
setting the color, width, and opacity of the SVG outline stroke. By
default, the stroke width is very small at \code{"1px"} so a size adjustment
with \code{"stroke_width"} can be useful. The \code{"stroke_opacity"} value can be
any decimal values between \code{0} and \code{1} (bounds included).}

\item{height, width}{The height and width style attributes of the rendered
SVG. If nothing is provided for \code{height} then a default value of \code{"1em"}
will be applied. If a \code{width} isn't given, then it will be calculated in
units of \code{"em"} on the basis of the icon's SVG \code{"viewBox"} dimensions.}

\item{margin_left, margin_right}{The length value for the margin that's either
left or right of the icon. By default, \code{"auto"} is used for both
properties. If space is needed on either side then a length of \code{"0.2em"} is
recommended as a starting point.}

\item{position}{The value for the \code{position} style attribute. By default,
\code{"relative"} is used here.}

\item{title}{An option for populating the SVG \code{'title'} attribute, which
provides on-hover text for the icon. By default, no title text is given to
the icon. If \code{a11y == "semantic"} then title text will be
automatically given to the rendered icon, however, providing text here
will override that.}

\item{a11y}{Cases that distinguish the role of the icon and inform which
accessibility attributes to be used. Icons can either be \code{"deco"}
(decorative, the default case) or \code{"sem"} (semantic). Using \code{"none"} will
result in no accessibility features for the icon.}
}
\value{
A \code{fontawesome} object.
}
\description{
Add one or more Font Awesome icons as SVGs contained within \verb{<svg>...</svg>}.
We can optionally set certain style attributes. The \code{fa()} function can be
used directly within inline evaluations of R code in R Markdown documents.
}
\examples{
if (interactive()) {

# Create a Font Awesome SVG icon
fa(name = "r-project")

}

}
